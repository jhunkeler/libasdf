name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      make_flags:
        description: Extra flags to pass to make
        required: false
        default: ''

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  INSTALL_PREFIX: /tmp/libasdf

jobs:
  build_matrix:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-15, macos-14]
        gcc: [12, 14]
        cmake_options: ["", "-DENABLE_ASAN=ON"]
        exclude:
          - os: macos-15
            cmake_options: "-DENABLE_ASAN=ON"
          - os: macos-15
            gcc: 12
          - os: macos-14
            cmake_options: "-DENABLE_ASAN=ON"
          - os: macos-14
            gcc: 14
          - os: ubuntu-latest
            gcc: 14
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
      with:
        submodules: true

    - name: Linux dependencies
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        sudo apt update
        sudo apt install -y \
            build-essential \
            libfyaml-dev

    - name: MacOS dependencies
      if: startsWith(matrix.os, 'macos')
      run: |
        brew update
        brew install \
            gcc@${{ matrix.gcc }}
            argp-standalone \
            libfyaml

    - name: Linux build
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        mkdir -p build
        cd build
        cmake .. \
          -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
          -DCMAKE_INSTALL_PREFIX=${{ env.INSTALL_PREFIX }} \
          ${{ matrix.cmake_options }}
        make

    - name: MacOS build
      if: startsWith(matrix.os, 'macos')
      env:
        CC: gcc-${{ matrix.gcc }}
        CXX: g++-${{ matrix.gcc }}
        FC: gfortran-${{ matrix.gcc }}

      run: |
        mkdir -p build
        cd build
        export SDKROOT="$(xcrun --show-sdk-path)"
        cmake .. \
          -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
          -DCMAKE_INSTALL_PREFIX=${{ env.INSTALL_PREFIX }} ${{ matrix.cmake_options }}
        make


    - name: Install
      run: |
        cd build
        make install

    - name: Generate source archive
      run: |
        cd build
        make dist

    - name: Generate binary archive
      run: |
        cd build
        cpack -G TGZ

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: |
        ctest --output-log test.log \
            -C ${{env.BUILD_TYPE}}

    - name: Output test logs on failure
      if: failure()
      run: |
        cat test.log
